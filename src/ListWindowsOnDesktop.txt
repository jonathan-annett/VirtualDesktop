        private static int iListDesktop;
        private static string sListDesktopPrefix = "";
        private static string sListDesktopLinePrefix = "";
        private static string sListDesktopLine1Prefix = "";
        private static string sListDesktopLine2PlusPrefix = "\n";
        private static string sListDesktopSuffix = "";

        private static bool EnumWindowsProcToList(IntPtr hWnd, int lParam)
        {
            try
            {
                int iDesktopIndex = VirtualDesktop.Desktop.FromDesktop(
                    VirtualDesktop.Desktop.FromWindow(hWnd)
                );
                if (iDesktopIndex == iListDesktop)
                {
                    Console.Write(sListDesktopLinePrefix + hWnd.ToInt32());
                    sListDesktopLinePrefix = sListDesktopLine2PlusPrefix;
                }
            }
            catch { }

            return true;
        }

        private static void ListWindowsOnDesktop(int DesktopIndex)
        {
            iListDesktop = DesktopIndex;
            EnumDelegate enumfunc = new EnumDelegate(EnumWindowsProcToList);
            Console.Write(sListDesktopPrefix);
            sListDesktopLinePrefix = sListDesktopLine1Prefix;
            EnumDesktopWindows(IntPtr.Zero, enumfunc, IntPtr.Zero);
            Console.WriteLine(sListDesktopSuffix);
        }

        [DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Auto)]
        private static extern int GetClassName(IntPtr hWnd, StringBuilder lpClassName,int nMaxCount);

       
        private static void ListWindowClassesOnDesktop(int DesktopIndex)
        {
            var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();

            iListDesktop = DesktopIndex;
            //EnumDelegate enumfunc = new EnumDelegate(EnumWindowsProcToListClasses);
            Console.Write(sListDesktopPrefix);
            sListDesktopLinePrefix = sListDesktopLine1Prefix;
            EnumDesktopWindows(IntPtr.Zero, (IntPtr hWnd, int lParam) => {
                 try
                {
                    int iDesktopIndex = VirtualDesktop.Desktop.FromDesktop(
                        VirtualDesktop.Desktop.FromWindow(hWnd)
                    );
                    if (iDesktopIndex == iListDesktop)
                    {
                        Console.Write(sListDesktopLinePrefix +"["+ hWnd.ToInt32());

                        StringBuilder sb = new StringBuilder(255 + 1);
                        if (GetClassName((IntPtr)hWnd, sb, sb.Capacity) > 0)
                        {
                            // valid class names don't need anything specal to serilaize the, besides double quotes
                            Console.Write(",\""+sb.ToString()+"\"");
                        } else {
                             Console.Write(",null");
                        }
 
                        sb = new StringBuilder(255 + 1);// we dont' want long text here.
                        if (GetWindowText((IntPtr)hWnd, sb, sb.Capacity) > 0)
                        {
                            // wrap returned name in serialize to ensure it's JSON safe
                            Console.Write(","+serializer.Serialize(sb.ToString())+"]");
                         } else {
                            Console.Write(",null]");
                        }

                        sListDesktopLinePrefix = sListDesktopLine2PlusPrefix;
                    }
                }
                catch { }

                return true;
            }, IntPtr.Zero);
            Console.WriteLine(sListDesktopSuffix);
        }
